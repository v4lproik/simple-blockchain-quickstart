#builder
FROM golang:1.18-alpine AS build

#install container dependencies
#gcc & musl-dev are required for go-ethereum library
RUN apk add --no-cache make git gcc musl-dev

#define working directory
WORKDIR /app

#do not link program to c librairies
ENV CGO_ENABLED=0

#copy source code excluding what's in .dockerignore
COPY . ./

#get app dependencies
RUN make dep

#build the app
RUN make build

#get the BINARY name generated by make build
#replace the placeholder in the entrypoint file with the BINARY name
RUN export BINARY=$(make print-BINARY | cut -d "=" -f 2 | xargs); sed -i -r "s/BINARY/${BINARY}/g" ./entrypoint.sh

#set permission here as might not be possible within the deployer
RUN chmod +x ./entrypoint.sh

#deployer
FROM golang:1.18-alpine

RUN apk add --no-cache shadow

#define user running the container
ARG USERNAME=blockchain-app
ARG USER_UID=1000
ARG USER_GID=$USER_UID

#add user to system
RUN groupadd --gid $USER_GID $USERNAME \
    && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME

#set default user
USER $USERNAME

WORKDIR /

#copy binaries
COPY --from=build /app/bin/ /

#copy entrepoint script knowing the binary to start
COPY --from=build /app/entrypoint.sh /entrypoint.sh

#expose node port
EXPOSE 8080

ENTRYPOINT ["/entrypoint.sh"]